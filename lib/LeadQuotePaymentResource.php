<?php
/**
 * LeadQuotePaymentResource
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ageras\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ageras.com API
 *
 * this is the Ageras API
 *
 * OpenAPI spec version: 2.0
 * Contact: cto@ageras.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ageras\Api;

use \ArrayAccess;

/**
 * LeadQuotePaymentResource Class Doc Comment
 *
 * @category    Class
 * @package     Ageras\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LeadQuotePaymentResource implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'LeadQuotePaymentResource';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'prepayment_percentage' => 'float',
        'prepayment_vat_amount' => '\Ageras\Api\AmountResource',
        'prepayment_amount_excl_vat' => '\Ageras\Api\AmountResource',
        'prepayment_amount_incl_vat' => '\Ageras\Api\AmountResource',
        'revenue_share_percentage' => 'float',
        'revenue_share_vat_amount' => '\Ageras\Api\AmountResource',
        'revenue_share_amount_excl_vat' => '\Ageras\Api\AmountResource',
        'revenue_share_amount_incl_vat' => '\Ageras\Api\AmountResource',
        'revenue_share_recurring_percentage' => 'float',
        'revenue_share_recurring_vat_amount' => '\Ageras\Api\AmountResource',
        'revenue_share_recurring_amount_excl_vat' => '\Ageras\Api\AmountResource',
        'revenue_share_recurring_amount_incl_vat' => '\Ageras\Api\AmountResource'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'prepayment_percentage' => 'prepayment_percentage',
        'prepayment_vat_amount' => 'prepayment_vat_amount',
        'prepayment_amount_excl_vat' => 'prepayment_amount_excl_vat',
        'prepayment_amount_incl_vat' => 'prepayment_amount_incl_vat',
        'revenue_share_percentage' => 'revenue_share_percentage',
        'revenue_share_vat_amount' => 'revenue_share_vat_amount',
        'revenue_share_amount_excl_vat' => 'revenue_share_amount_excl_vat',
        'revenue_share_amount_incl_vat' => 'revenue_share_amount_incl_vat',
        'revenue_share_recurring_percentage' => 'revenue_share_recurring_percentage',
        'revenue_share_recurring_vat_amount' => 'revenue_share_recurring_vat_amount',
        'revenue_share_recurring_amount_excl_vat' => 'revenue_share_recurring_amount_excl_vat',
        'revenue_share_recurring_amount_incl_vat' => 'revenue_share_recurring_amount_incl_vat'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'prepayment_percentage' => 'setPrepaymentPercentage',
        'prepayment_vat_amount' => 'setPrepaymentVatAmount',
        'prepayment_amount_excl_vat' => 'setPrepaymentAmountExclVat',
        'prepayment_amount_incl_vat' => 'setPrepaymentAmountInclVat',
        'revenue_share_percentage' => 'setRevenueSharePercentage',
        'revenue_share_vat_amount' => 'setRevenueShareVatAmount',
        'revenue_share_amount_excl_vat' => 'setRevenueShareAmountExclVat',
        'revenue_share_amount_incl_vat' => 'setRevenueShareAmountInclVat',
        'revenue_share_recurring_percentage' => 'setRevenueShareRecurringPercentage',
        'revenue_share_recurring_vat_amount' => 'setRevenueShareRecurringVatAmount',
        'revenue_share_recurring_amount_excl_vat' => 'setRevenueShareRecurringAmountExclVat',
        'revenue_share_recurring_amount_incl_vat' => 'setRevenueShareRecurringAmountInclVat'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'prepayment_percentage' => 'getPrepaymentPercentage',
        'prepayment_vat_amount' => 'getPrepaymentVatAmount',
        'prepayment_amount_excl_vat' => 'getPrepaymentAmountExclVat',
        'prepayment_amount_incl_vat' => 'getPrepaymentAmountInclVat',
        'revenue_share_percentage' => 'getRevenueSharePercentage',
        'revenue_share_vat_amount' => 'getRevenueShareVatAmount',
        'revenue_share_amount_excl_vat' => 'getRevenueShareAmountExclVat',
        'revenue_share_amount_incl_vat' => 'getRevenueShareAmountInclVat',
        'revenue_share_recurring_percentage' => 'getRevenueShareRecurringPercentage',
        'revenue_share_recurring_vat_amount' => 'getRevenueShareRecurringVatAmount',
        'revenue_share_recurring_amount_excl_vat' => 'getRevenueShareRecurringAmountExclVat',
        'revenue_share_recurring_amount_incl_vat' => 'getRevenueShareRecurringAmountInclVat'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['prepayment_percentage'] = isset($data['prepayment_percentage']) ? $data['prepayment_percentage'] : null;
        $this->container['prepayment_vat_amount'] = isset($data['prepayment_vat_amount']) ? $data['prepayment_vat_amount'] : null;
        $this->container['prepayment_amount_excl_vat'] = isset($data['prepayment_amount_excl_vat']) ? $data['prepayment_amount_excl_vat'] : null;
        $this->container['prepayment_amount_incl_vat'] = isset($data['prepayment_amount_incl_vat']) ? $data['prepayment_amount_incl_vat'] : null;
        $this->container['revenue_share_percentage'] = isset($data['revenue_share_percentage']) ? $data['revenue_share_percentage'] : null;
        $this->container['revenue_share_vat_amount'] = isset($data['revenue_share_vat_amount']) ? $data['revenue_share_vat_amount'] : null;
        $this->container['revenue_share_amount_excl_vat'] = isset($data['revenue_share_amount_excl_vat']) ? $data['revenue_share_amount_excl_vat'] : null;
        $this->container['revenue_share_amount_incl_vat'] = isset($data['revenue_share_amount_incl_vat']) ? $data['revenue_share_amount_incl_vat'] : null;
        $this->container['revenue_share_recurring_percentage'] = isset($data['revenue_share_recurring_percentage']) ? $data['revenue_share_recurring_percentage'] : null;
        $this->container['revenue_share_recurring_vat_amount'] = isset($data['revenue_share_recurring_vat_amount']) ? $data['revenue_share_recurring_vat_amount'] : null;
        $this->container['revenue_share_recurring_amount_excl_vat'] = isset($data['revenue_share_recurring_amount_excl_vat']) ? $data['revenue_share_recurring_amount_excl_vat'] : null;
        $this->container['revenue_share_recurring_amount_incl_vat'] = isset($data['revenue_share_recurring_amount_incl_vat']) ? $data['revenue_share_recurring_amount_incl_vat'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets prepayment_percentage
     * @return float
     */
    public function getPrepaymentPercentage()
    {
        return $this->container['prepayment_percentage'];
    }

    /**
     * Sets prepayment_percentage
     * @param float $prepayment_percentage
     * @return $this
     */
    public function setPrepaymentPercentage($prepayment_percentage)
    {
        $this->container['prepayment_percentage'] = $prepayment_percentage;

        return $this;
    }

    /**
     * Gets prepayment_vat_amount
     * @return \Ageras\Api\AmountResource
     */
    public function getPrepaymentVatAmount()
    {
        return $this->container['prepayment_vat_amount'];
    }

    /**
     * Sets prepayment_vat_amount
     * @param \Ageras\Api\AmountResource $prepayment_vat_amount
     * @return $this
     */
    public function setPrepaymentVatAmount($prepayment_vat_amount)
    {
        $this->container['prepayment_vat_amount'] = $prepayment_vat_amount;

        return $this;
    }

    /**
     * Gets prepayment_amount_excl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getPrepaymentAmountExclVat()
    {
        return $this->container['prepayment_amount_excl_vat'];
    }

    /**
     * Sets prepayment_amount_excl_vat
     * @param \Ageras\Api\AmountResource $prepayment_amount_excl_vat
     * @return $this
     */
    public function setPrepaymentAmountExclVat($prepayment_amount_excl_vat)
    {
        $this->container['prepayment_amount_excl_vat'] = $prepayment_amount_excl_vat;

        return $this;
    }

    /**
     * Gets prepayment_amount_incl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getPrepaymentAmountInclVat()
    {
        return $this->container['prepayment_amount_incl_vat'];
    }

    /**
     * Sets prepayment_amount_incl_vat
     * @param \Ageras\Api\AmountResource $prepayment_amount_incl_vat
     * @return $this
     */
    public function setPrepaymentAmountInclVat($prepayment_amount_incl_vat)
    {
        $this->container['prepayment_amount_incl_vat'] = $prepayment_amount_incl_vat;

        return $this;
    }

    /**
     * Gets revenue_share_percentage
     * @return float
     */
    public function getRevenueSharePercentage()
    {
        return $this->container['revenue_share_percentage'];
    }

    /**
     * Sets revenue_share_percentage
     * @param float $revenue_share_percentage
     * @return $this
     */
    public function setRevenueSharePercentage($revenue_share_percentage)
    {
        $this->container['revenue_share_percentage'] = $revenue_share_percentage;

        return $this;
    }

    /**
     * Gets revenue_share_vat_amount
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareVatAmount()
    {
        return $this->container['revenue_share_vat_amount'];
    }

    /**
     * Sets revenue_share_vat_amount
     * @param \Ageras\Api\AmountResource $revenue_share_vat_amount
     * @return $this
     */
    public function setRevenueShareVatAmount($revenue_share_vat_amount)
    {
        $this->container['revenue_share_vat_amount'] = $revenue_share_vat_amount;

        return $this;
    }

    /**
     * Gets revenue_share_amount_excl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareAmountExclVat()
    {
        return $this->container['revenue_share_amount_excl_vat'];
    }

    /**
     * Sets revenue_share_amount_excl_vat
     * @param \Ageras\Api\AmountResource $revenue_share_amount_excl_vat
     * @return $this
     */
    public function setRevenueShareAmountExclVat($revenue_share_amount_excl_vat)
    {
        $this->container['revenue_share_amount_excl_vat'] = $revenue_share_amount_excl_vat;

        return $this;
    }

    /**
     * Gets revenue_share_amount_incl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareAmountInclVat()
    {
        return $this->container['revenue_share_amount_incl_vat'];
    }

    /**
     * Sets revenue_share_amount_incl_vat
     * @param \Ageras\Api\AmountResource $revenue_share_amount_incl_vat
     * @return $this
     */
    public function setRevenueShareAmountInclVat($revenue_share_amount_incl_vat)
    {
        $this->container['revenue_share_amount_incl_vat'] = $revenue_share_amount_incl_vat;

        return $this;
    }

    /**
     * Gets revenue_share_recurring_percentage
     * @return float
     */
    public function getRevenueShareRecurringPercentage()
    {
        return $this->container['revenue_share_recurring_percentage'];
    }

    /**
     * Sets revenue_share_recurring_percentage
     * @param float $revenue_share_recurring_percentage
     * @return $this
     */
    public function setRevenueShareRecurringPercentage($revenue_share_recurring_percentage)
    {
        $this->container['revenue_share_recurring_percentage'] = $revenue_share_recurring_percentage;

        return $this;
    }

    /**
     * Gets revenue_share_recurring_vat_amount
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareRecurringVatAmount()
    {
        return $this->container['revenue_share_recurring_vat_amount'];
    }

    /**
     * Sets revenue_share_recurring_vat_amount
     * @param \Ageras\Api\AmountResource $revenue_share_recurring_vat_amount
     * @return $this
     */
    public function setRevenueShareRecurringVatAmount($revenue_share_recurring_vat_amount)
    {
        $this->container['revenue_share_recurring_vat_amount'] = $revenue_share_recurring_vat_amount;

        return $this;
    }

    /**
     * Gets revenue_share_recurring_amount_excl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareRecurringAmountExclVat()
    {
        return $this->container['revenue_share_recurring_amount_excl_vat'];
    }

    /**
     * Sets revenue_share_recurring_amount_excl_vat
     * @param \Ageras\Api\AmountResource $revenue_share_recurring_amount_excl_vat
     * @return $this
     */
    public function setRevenueShareRecurringAmountExclVat($revenue_share_recurring_amount_excl_vat)
    {
        $this->container['revenue_share_recurring_amount_excl_vat'] = $revenue_share_recurring_amount_excl_vat;

        return $this;
    }

    /**
     * Gets revenue_share_recurring_amount_incl_vat
     * @return \Ageras\Api\AmountResource
     */
    public function getRevenueShareRecurringAmountInclVat()
    {
        return $this->container['revenue_share_recurring_amount_incl_vat'];
    }

    /**
     * Sets revenue_share_recurring_amount_incl_vat
     * @param \Ageras\Api\AmountResource $revenue_share_recurring_amount_incl_vat
     * @return $this
     */
    public function setRevenueShareRecurringAmountInclVat($revenue_share_recurring_amount_incl_vat)
    {
        $this->container['revenue_share_recurring_amount_incl_vat'] = $revenue_share_recurring_amount_incl_vat;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Ageras\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Ageras\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


