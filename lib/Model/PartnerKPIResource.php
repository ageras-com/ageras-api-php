<?php
/**
 * PartnerKPIResource
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ageras\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ageras.com API
 *
 * this is the Ageras API
 *
 * OpenAPI spec version: 2.0
 * Contact: cto@ageras.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ageras\Api\Model;

use \ArrayAccess;

/**
 * PartnerKPIResource Class Doc Comment
 *
 * @category    Class
 * @package     Ageras\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PartnerKPIResource implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'PartnerKPIResource';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'punches_monthly' => 'int',
        'last_login' => 'string',
        'last_invoice' => 'string',
        'last_phone_call' => 'string',
        'last_published_quote' => 'string',
        'last_subscription_start_date' => 'string',
        'revenue_month' => '\Ageras\Api\Model\AmountResource',
        'revenue_6months' => '\Ageras\Api\Model\AmountResource',
        'revenue_total' => '\Ageras\Api\Model\AmountResource',
        'accepted_quotes_count' => 'int',
        'published_quotes_count' => 'int',
        'unmatched_count' => 'int',
        'unmatched_percent' => 'float',
        'win_ratio' => 'float'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'punches_monthly' => 'punches_monthly',
        'last_login' => 'last_login',
        'last_invoice' => 'last_invoice',
        'last_phone_call' => 'last_phone_call',
        'last_published_quote' => 'last_published_quote',
        'last_subscription_start_date' => 'last_subscription_start_date',
        'revenue_month' => 'revenue_month',
        'revenue_6months' => 'revenue_6months',
        'revenue_total' => 'revenue_total',
        'accepted_quotes_count' => 'accepted_quotes_count',
        'published_quotes_count' => 'published_quotes_count',
        'unmatched_count' => 'unmatched_count',
        'unmatched_percent' => 'unmatched_percent',
        'win_ratio' => 'win_ratio'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'punches_monthly' => 'setPunchesMonthly',
        'last_login' => 'setLastLogin',
        'last_invoice' => 'setLastInvoice',
        'last_phone_call' => 'setLastPhoneCall',
        'last_published_quote' => 'setLastPublishedQuote',
        'last_subscription_start_date' => 'setLastSubscriptionStartDate',
        'revenue_month' => 'setRevenueMonth',
        'revenue_6months' => 'setRevenue6months',
        'revenue_total' => 'setRevenueTotal',
        'accepted_quotes_count' => 'setAcceptedQuotesCount',
        'published_quotes_count' => 'setPublishedQuotesCount',
        'unmatched_count' => 'setUnmatchedCount',
        'unmatched_percent' => 'setUnmatchedPercent',
        'win_ratio' => 'setWinRatio'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'punches_monthly' => 'getPunchesMonthly',
        'last_login' => 'getLastLogin',
        'last_invoice' => 'getLastInvoice',
        'last_phone_call' => 'getLastPhoneCall',
        'last_published_quote' => 'getLastPublishedQuote',
        'last_subscription_start_date' => 'getLastSubscriptionStartDate',
        'revenue_month' => 'getRevenueMonth',
        'revenue_6months' => 'getRevenue6months',
        'revenue_total' => 'getRevenueTotal',
        'accepted_quotes_count' => 'getAcceptedQuotesCount',
        'published_quotes_count' => 'getPublishedQuotesCount',
        'unmatched_count' => 'getUnmatchedCount',
        'unmatched_percent' => 'getUnmatchedPercent',
        'win_ratio' => 'getWinRatio'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['punches_monthly'] = isset($data['punches_monthly']) ? $data['punches_monthly'] : null;
        $this->container['last_login'] = isset($data['last_login']) ? $data['last_login'] : null;
        $this->container['last_invoice'] = isset($data['last_invoice']) ? $data['last_invoice'] : null;
        $this->container['last_phone_call'] = isset($data['last_phone_call']) ? $data['last_phone_call'] : null;
        $this->container['last_published_quote'] = isset($data['last_published_quote']) ? $data['last_published_quote'] : null;
        $this->container['last_subscription_start_date'] = isset($data['last_subscription_start_date']) ? $data['last_subscription_start_date'] : null;
        $this->container['revenue_month'] = isset($data['revenue_month']) ? $data['revenue_month'] : null;
        $this->container['revenue_6months'] = isset($data['revenue_6months']) ? $data['revenue_6months'] : null;
        $this->container['revenue_total'] = isset($data['revenue_total']) ? $data['revenue_total'] : null;
        $this->container['accepted_quotes_count'] = isset($data['accepted_quotes_count']) ? $data['accepted_quotes_count'] : null;
        $this->container['published_quotes_count'] = isset($data['published_quotes_count']) ? $data['published_quotes_count'] : null;
        $this->container['unmatched_count'] = isset($data['unmatched_count']) ? $data['unmatched_count'] : null;
        $this->container['unmatched_percent'] = isset($data['unmatched_percent']) ? $data['unmatched_percent'] : null;
        $this->container['win_ratio'] = isset($data['win_ratio']) ? $data['win_ratio'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets punches_monthly
     * @return int
     */
    public function getPunchesMonthly()
    {
        return $this->container['punches_monthly'];
    }

    /**
     * Sets punches_monthly
     * @param int $punches_monthly
     * @return $this
     */
    public function setPunchesMonthly($punches_monthly)
    {
        $this->container['punches_monthly'] = $punches_monthly;

        return $this;
    }

    /**
     * Gets last_login
     * @return string
     */
    public function getLastLogin()
    {
        return $this->container['last_login'];
    }

    /**
     * Sets last_login
     * @param string $last_login
     * @return $this
     */
    public function setLastLogin($last_login)
    {
        $this->container['last_login'] = $last_login;

        return $this;
    }

    /**
     * Gets last_invoice
     * @return string
     */
    public function getLastInvoice()
    {
        return $this->container['last_invoice'];
    }

    /**
     * Sets last_invoice
     * @param string $last_invoice
     * @return $this
     */
    public function setLastInvoice($last_invoice)
    {
        $this->container['last_invoice'] = $last_invoice;

        return $this;
    }

    /**
     * Gets last_phone_call
     * @return string
     */
    public function getLastPhoneCall()
    {
        return $this->container['last_phone_call'];
    }

    /**
     * Sets last_phone_call
     * @param string $last_phone_call
     * @return $this
     */
    public function setLastPhoneCall($last_phone_call)
    {
        $this->container['last_phone_call'] = $last_phone_call;

        return $this;
    }

    /**
     * Gets last_published_quote
     * @return string
     */
    public function getLastPublishedQuote()
    {
        return $this->container['last_published_quote'];
    }

    /**
     * Sets last_published_quote
     * @param string $last_published_quote
     * @return $this
     */
    public function setLastPublishedQuote($last_published_quote)
    {
        $this->container['last_published_quote'] = $last_published_quote;

        return $this;
    }

    /**
     * Gets last_subscription_start_date
     * @return string
     */
    public function getLastSubscriptionStartDate()
    {
        return $this->container['last_subscription_start_date'];
    }

    /**
     * Sets last_subscription_start_date
     * @param string $last_subscription_start_date
     * @return $this
     */
    public function setLastSubscriptionStartDate($last_subscription_start_date)
    {
        $this->container['last_subscription_start_date'] = $last_subscription_start_date;

        return $this;
    }

    /**
     * Gets revenue_month
     * @return \Ageras\Api\Model\AmountResource
     */
    public function getRevenueMonth()
    {
        return $this->container['revenue_month'];
    }

    /**
     * Sets revenue_month
     * @param \Ageras\Api\Model\AmountResource $revenue_month
     * @return $this
     */
    public function setRevenueMonth($revenue_month)
    {
        $this->container['revenue_month'] = $revenue_month;

        return $this;
    }

    /**
     * Gets revenue_6months
     * @return \Ageras\Api\Model\AmountResource
     */
    public function getRevenue6months()
    {
        return $this->container['revenue_6months'];
    }

    /**
     * Sets revenue_6months
     * @param \Ageras\Api\Model\AmountResource $revenue_6months
     * @return $this
     */
    public function setRevenue6months($revenue_6months)
    {
        $this->container['revenue_6months'] = $revenue_6months;

        return $this;
    }

    /**
     * Gets revenue_total
     * @return \Ageras\Api\Model\AmountResource
     */
    public function getRevenueTotal()
    {
        return $this->container['revenue_total'];
    }

    /**
     * Sets revenue_total
     * @param \Ageras\Api\Model\AmountResource $revenue_total
     * @return $this
     */
    public function setRevenueTotal($revenue_total)
    {
        $this->container['revenue_total'] = $revenue_total;

        return $this;
    }

    /**
     * Gets accepted_quotes_count
     * @return int
     */
    public function getAcceptedQuotesCount()
    {
        return $this->container['accepted_quotes_count'];
    }

    /**
     * Sets accepted_quotes_count
     * @param int $accepted_quotes_count
     * @return $this
     */
    public function setAcceptedQuotesCount($accepted_quotes_count)
    {
        $this->container['accepted_quotes_count'] = $accepted_quotes_count;

        return $this;
    }

    /**
     * Gets published_quotes_count
     * @return int
     */
    public function getPublishedQuotesCount()
    {
        return $this->container['published_quotes_count'];
    }

    /**
     * Sets published_quotes_count
     * @param int $published_quotes_count
     * @return $this
     */
    public function setPublishedQuotesCount($published_quotes_count)
    {
        $this->container['published_quotes_count'] = $published_quotes_count;

        return $this;
    }

    /**
     * Gets unmatched_count
     * @return int
     */
    public function getUnmatchedCount()
    {
        return $this->container['unmatched_count'];
    }

    /**
     * Sets unmatched_count
     * @param int $unmatched_count
     * @return $this
     */
    public function setUnmatchedCount($unmatched_count)
    {
        $this->container['unmatched_count'] = $unmatched_count;

        return $this;
    }

    /**
     * Gets unmatched_percent
     * @return float
     */
    public function getUnmatchedPercent()
    {
        return $this->container['unmatched_percent'];
    }

    /**
     * Sets unmatched_percent
     * @param float $unmatched_percent
     * @return $this
     */
    public function setUnmatchedPercent($unmatched_percent)
    {
        $this->container['unmatched_percent'] = $unmatched_percent;

        return $this;
    }

    /**
     * Gets win_ratio
     * @return float
     */
    public function getWinRatio()
    {
        return $this->container['win_ratio'];
    }

    /**
     * Sets win_ratio
     * @param float $win_ratio
     * @return $this
     */
    public function setWinRatio($win_ratio)
    {
        $this->container['win_ratio'] = $win_ratio;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Ageras\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Ageras\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


